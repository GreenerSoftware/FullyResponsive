name: app

on:
  push:
    branches:
      - main
    paths:
    # Build when there are changes in the directory that holds the component,
    # or when this workflow file is changed
    - 'app/**'
    - '.github/workflows/app.yml'
  schedule:
    # A weekly build to pick up updates and security patches for libraries
    # This should fail if there are API changes in new dependency versions
    - cron: "11 11 * * 5"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Lambda
    runs-on: ubuntu-latest
    env:
      buildsBucket: ${{ vars.BUILDS_BUCKET }}
      lambdaName: ${{ vars.APP_LAMBDA }}
      bucket: ${{ vars.APP_BUCKET }}
      distributionId: ${{ vars.APP_DISTRIBUTIONID }}

    steps:

    - uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.GHA_OIDC_ROLE }}
        aws-region: eu-west-2

    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Build
      working-directory: ${{ github.workflow }}
      run: |
        npm i
        npm run build
        cp src/pages/*.njk dist/pages/
        cp src/pages/01-welcome/*.njk dist/pages/01-welcome/
        cp src/pages/20-personal-details/*.njk dist/pages/20-personal-details/
        cp src/pages/40-submitted/*.njk dist/pages/40-submitted/
        cp src/pages/100-check-your-answers-annual/*.njk dist/pages/100-check-your-answers-annual/

    - name: Dependencies
      working-directory: ${{ github.workflow }}
      run: |
        cp package*.json dist/
        cd dist/
        npm ci --omit=dev

    - name: Package
      working-directory: ${{ github.workflow }}
      run: |
        npm run package

    - name: Update function code
      working-directory: ${{ github.workflow }}
      run: |
        aws s3 cp dist/function.zip s3://${{ env.buildsBucket }}/${{ github.workflow }}.zip
        aws lambda update-function-code --function-name=${{ env.lambdaName }} --s3-bucket ${{ env.buildsBucket }} --s3-key ${{ github.workflow }}.zip

    - name: Upload assets to s3
      working-directory: ${{ github.workflow }}
      run: |
        # app assets
        mkdir deer-return
        cp -r assets deer-return/
        cp -r node_modules/govuk-frontend deer-return/
        cp -r node_modules/naturescot-frontend deer-return/

        # Tweak the logo path
        mkdir -p deer-return/naturescot-frontend/assets/images
        cp node_modules/naturescot-frontend/naturescot/assets/images/naturescot-logo.png deer-return/naturescot-frontend/assets/images/naturescot-logo.png

        # Add missing fonts
        mkdir -p deer-return/naturescot-frontend/assets/fonts
        cp assets/fonts/* deer-return/naturescot-frontend/assets/fonts/
        aws s3 sync --delete deer-return s3://${bucket}/deer-return/

    - name: Invalidate Cloudfront
      working-directory: ${{ github.workflow }}
      run: |
        aws cloudfront create-invalidation --distribution-id $distributionId --paths '/*'
